---
# 1st Option
- hosts: webservers
  become: true
  tasks:
    - setup:

- hosts: proxy
  become: true
  gather_facts: true
  vars:
    haproxy_backend_balance_method: 'roundrobin'
    haproxy_backend_mode: 'http'
    haproxy_backend_servers:
      - name: node1
        address: "{{ hostvars['node1.example.com']['ansible_all_ipv4_addresses'][0] }}:80"
      - name: node2
        address: "{{ hostvars['node2.example.com']['ansible_all_ipv4_addresses'][0] }}:80"
  roles:
    - geerlingguy.haproxy
  tasks:
    - name: allow 80
      firewalld:
        service: http
        state: enabled
        permanent: true
        immediate: true

# 2nd Option
- hosts: webservers,proxy
  become: true
  gather_facts: true
  tags: second
  vars:
    haproxy_backend_balance_method: 'roundrobin'
    haproxy_backend_mode: 'http'
    haproxy_backend_servers:
      - name: node1
        address: "{{ hostvars['node1.example.com']['ansible_all_ipv4_addresses'][0] }}:80"
      - name: node2
        address: "{{ hostvars['node2.example.com']['ansible_all_ipv4_addresses'][0] }}:80"
  tasks:

    - name: include_role on conditions
      include_role:
        name: geerlingguy.haproxy
      when: "'proxy' in group_names"

    - name: allow 80
      firewalld:
        service: http
        state: enabled
        permanent: true
        immediate: true
      when: "'proxy' in group_names"

