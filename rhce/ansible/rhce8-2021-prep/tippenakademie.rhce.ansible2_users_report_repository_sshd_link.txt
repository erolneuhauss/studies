--- - hosts: webservers,database become: true gather_facts: false vars_files: - secret.yml - user_list.yml tasks: - block: - user: name: "{{ item.username }}" uid: "{{ item.uid }}" groups: wheel shell: /bin/bash password: "{{ user_password | string | password_hash('sha512') }}" state: present changed_when: false loop: "{{ users }}" - authorized_key: user: "{{ item.username }}" key: "{{ lookup('file', 'id_rsa.pub') }}" state: present loop: "{{ users }}" - copy: src: ~/.vagrant.d/insecure_private_key dest: "{{ item.username }}" owner: "{{ item.username }}" group: "{{ item.username }}" mode: 0600 loop: "{{ users }}" when: ('webservers' in group_names and (item.uid | string | first) == '1') or ('database' in group_names and (item.uid | string | first) == '2') --- - hosts: all gather_facts: true tasks: - copy: src: report.txt dest: /tmp/report.txt - replace: path: /tmp/report.txt regexp: "{{ item.FROM }}" replace: "{{ item.TO }}" loop: - { FROM: "HOST.*" , TO: "HOST={{ inventory_hostname }}" } - { FROM: "MEMORY.*" , TO: "MEMORY={{ ansible_memtotal_mb }}" } - { FROM: "BIOS.*" , TO: "BIOS={{ ansible_bios_version }}" } - { FROM: "SDA_DISK_SIZE.*" , TO: "SDA_DISK_SIZE={% if ansible_devices['sda'] is defined %}{{ ansible_devices['sda']['size'] }}{% else %}NONE{% endif %}" } - { FROM: "SDB_DISK_SIZE.*" , TO: "SDB_DISK_SIZE={% if ansible_devices['sdb'] is defined %}{{ ansible_devices['sdb']['size'] }}{% else %}NONE{% endif %}" } - shell: cat /tmp/report.txt register: report changed_when: false - debug: var: report.stdout_lines --- - hosts: database become: true gather_facts: false tasks: - yum_repository: name: mysql56-community description: "MySQL 5.6 YUM Repo" baseurl: http://repo.example.com/rpms state: present --- - hosts: all become: true gather_facts: false tasks: - lineinfile: path: /etc/ssh/sshd_config regexp: '{{ item.FROM }}' line: '{{ item.TO }}' validate: /sbin/sshd -tf %s backup: true loop: - { FROM: '^maxauthtries.*', TO: 'MaxAuthTries 3' } - { FROM: '^X11Forwarding.*', TO: 'X11Forwarding no' } - { FROM: '^Banner .*', TO: 'Banner /etc/motd' } - systemd: name: sshd daemon_reload: true --- - hosts: node3.example.com become: true gather_facts: false tasks: - file: src: /usr/lib/systemd/system/multi-user.target dest: /etc/systemd/system/default.target state: link
