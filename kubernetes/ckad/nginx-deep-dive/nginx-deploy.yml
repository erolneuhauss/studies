apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        configHash: ""
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      volumes:
      - name: nginx-ssl-public-key-volume
        secret:
          secretName: nginx-ssl-public-key-secret
      - name: nginx-ssl-private-key-volume
        secret:
          secretName: nginx-ssl-private-key-secret
      - name: secret-htpasswd-volume
        secret:
          secretName: nginx-protected
      - name: nginx-webcontent-volume
        configMap:
          name: nginx-webcontent
      - name: nginx-config-volume
        configMap:
          name: nginx-configmap-multi
      - name: nginx-modsecurity-volume
        configMap:
          name: nginx-modsecurity
      - name: webcontent-example
        emptyDir: {}
      containers:
      - image: registry.fritz.box/fufuhu/docker-nginx-modsecurity:aarch64-v0.0.1
        name: nginx
        ports:
          - containerPort: 80
            name: http
          - containerPort: 443
            name: https
        volumeMounts:
          - name: nginx-ssl-public-key-volume
            mountPath: /etc/ssl/certs/public.crt
            subPath: public.crt
          - name: nginx-ssl-private-key-volume
            mountPath: /etc/ssl/private/private.key
            subPath: private.key
          - name: secret-htpasswd-volume
            mountPath: /etc/nginx/protected
          - name: nginx-config-volume
            mountPath: /etc/nginx
            readOnly: false
          - name: nginx-modsecurity-volume
            mountPath: /etc/nginx/modsecurity
            readOnly: false
          - name: nginx-webcontent-volume
            mountPath: /usr/share/nginx/html
          - name: webcontent-example
            mountPath: /example.com
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 60
      initContainers:
      - image: registry.fritz.box/fufuhu/docker-nginx-modsecurity:aarch64-v0.0.1
        name: nginx-test
        command: ['nginx', '-t']
        ports:
          - containerPort: 80
            name: http
        volumeMounts:
          - name: nginx-ssl-public-key-volume
            mountPath: /etc/ssl/certs/public.crt
            subPath: public.crt
          - name: nginx-ssl-private-key-volume
            mountPath: /etc/ssl/private/private.key
            subPath: private.key
          - name: nginx-config-volume
            mountPath: /etc/nginx
            readOnly: false
          - name: nginx-modsecurity-volume
            mountPath: /etc/nginx/modsecurity
            readOnly: false
          - name: webcontent-example
            mountPath: /example.com
      - image: registry.fritz.box/arm64v8/nginx
        name: webcontent
        command: ['/bin/sh']
        args:
          - -c
          - >-
            echo "check this out!" > /example.com/index.html
        ports:
          - containerPort: 80
            name: http
        volumeMounts:
          - name: nginx-webcontent-volume
            mountPath: /usr/share/nginx/html
          - name: webcontent-example
            mountPath: /example.com

