
PLAY [localhost] *****************************************************************************************************************************************************

TASK [get list of pods] **********************************************************************************************************************************************
ok: [localhost]

TASK [check last command status] *************************************************************************************************************************************
ok: [localhost] => 
  pod_list["resources"]:
  - apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: '2021-02-10T22:44:26Z'
      generateName: grafana-7cccfc9b5f-
      labels:
        app: grafana
        pod-template-hash: 7cccfc9b5f
      managedFields:
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:metadata:
            f:generateName: {}
            f:labels:
              .: {}
              f:app: {}
              f:pod-template-hash: {}
            f:ownerReferences:
              .: {}
              k:{"uid":"2b4f7cd7-77f3-46dc-8eb1-a04e2d14350a"}:
                .: {}
                f:apiVersion: {}
                f:blockOwnerDeletion: {}
                f:controller: {}
                f:kind: {}
                f:name: {}
                f:uid: {}
          f:spec:
            f:containers:
              k:{"name":"grafana"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":3000,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/etc/grafana"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/grafana/provisioning/dashboards"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/etc/grafana/provisioning/datasources"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/apiserver"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/cluster-total"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/controller-manager"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/coredns-dashboard"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-cluster"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-namespace"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-node"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-pod"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-workload"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/k8s-resources-workloads-namespace"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/kubelet"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/kubernetes-cluster-dashboard"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/namespace-by-pod"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/namespace-by-workload"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/node-cluster-rsrc-use"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/node-rsrc-use"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/nodes"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/persistentvolumesusage"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/pod-total"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/prometheus"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/prometheus-dashboard"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/prometheus-remote-write"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/proxy"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/scheduler"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/statefulset"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/traefik-dashboard"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/grafana-dashboard-definitions/0/workload-total"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/var/lib/grafana"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:enableServiceLinks: {}
            f:nodeSelector:
              .: {}
              f:beta.kubernetes.io/os: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:runAsNonRoot: {}
              f:runAsUser: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"grafana-config"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"grafana-dashboard-apiserver"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-cluster-total"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-controller-manager"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-coredns-dashboard"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-cluster"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-namespace"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-node"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-pod"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-workload"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-k8s-resources-workloads-namespace"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-kubelet"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-kubernetes-cluster-dashboard"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-namespace-by-pod"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-namespace-by-workload"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-node-cluster-rsrc-use"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-node-rsrc-use"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-nodes"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-persistentvolumesusage"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-pod-total"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-prometheus"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-prometheus-dashboard"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-prometheus-remote-write"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-proxy"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-scheduler"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-statefulset"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-traefik-dashboard"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboard-workload-total"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-dashboards"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"grafana-datasources"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"grafana-storage"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
        manager: kube-controller-manager
        operation: Update
        time: '2021-02-10T22:44:26Z'
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            f:conditions:
              .: {}
              k:{"type":"PodScheduled"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:message: {}
                f:reason: {}
                f:status: {}
                f:type: {}
        manager: kube-scheduler
        operation: Update
        time: '2021-02-10T22:44:27Z'
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:status:
            f:conditions:
              k:{"type":"ContainersReady"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"Initialized"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
              k:{"type":"Ready"}:
                .: {}
                f:lastProbeTime: {}
                f:lastTransitionTime: {}
                f:status: {}
                f:type: {}
            f:containerStatuses: {}
            f:hostIP: {}
            f:phase: {}
            f:podIP: {}
            f:podIPs:
              .: {}
              k:{"ip":"10.244.2.51"}:
                .: {}
                f:ip: {}
            f:startTime: {}
        manager: kubelet
        operation: Update
        time: '2021-02-11T12:06:35Z'
      name: grafana-7cccfc9b5f-5nmdz
      namespace: monitoring
      ownerReferences:
      - apiVersion: apps/v1
        blockOwnerDeletion: true
        controller: true
        kind: ReplicaSet
        name: grafana-7cccfc9b5f
        uid: 2b4f7cd7-77f3-46dc-8eb1-a04e2d14350a
      resourceVersion: '274232'
      selfLink: /api/v1/namespaces/monitoring/pods/grafana-7cccfc9b5f-5nmdz
      uid: 0e316bfe-a42d-4e2e-9126-fe336bf8d70f
    spec:
      containers:
      - image: grafana/grafana:7.0.3
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
        - mountPath: /grafana-dashboard-definitions/0/apiserver
          name: grafana-dashboard-apiserver
        - mountPath: /grafana-dashboard-definitions/0/cluster-total
          name: grafana-dashboard-cluster-total
        - mountPath: /grafana-dashboard-definitions/0/controller-manager
          name: grafana-dashboard-controller-manager
        - mountPath: /grafana-dashboard-definitions/0/coredns-dashboard
          name: grafana-dashboard-coredns-dashboard
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-cluster
          name: grafana-dashboard-k8s-resources-cluster
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-namespace
          name: grafana-dashboard-k8s-resources-namespace
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-node
          name: grafana-dashboard-k8s-resources-node
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-pod
          name: grafana-dashboard-k8s-resources-pod
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workload
          name: grafana-dashboard-k8s-resources-workload
        - mountPath: /grafana-dashboard-definitions/0/k8s-resources-workloads-namespace
          name: grafana-dashboard-k8s-resources-workloads-namespace
        - mountPath: /grafana-dashboard-definitions/0/kubelet
          name: grafana-dashboard-kubelet
        - mountPath: /grafana-dashboard-definitions/0/kubernetes-cluster-dashboard
          name: grafana-dashboard-kubernetes-cluster-dashboard
        - mountPath: /grafana-dashboard-definitions/0/namespace-by-pod
          name: grafana-dashboard-namespace-by-pod
        - mountPath: /grafana-dashboard-definitions/0/namespace-by-workload
          name: grafana-dashboard-namespace-by-workload
        - mountPath: /grafana-dashboard-definitions/0/node-cluster-rsrc-use
          name: grafana-dashboard-node-cluster-rsrc-use
        - mountPath: /grafana-dashboard-definitions/0/node-rsrc-use
          name: grafana-dashboard-node-rsrc-use
        - mountPath: /grafana-dashboard-definitions/0/nodes
          name: grafana-dashboard-nodes
        - mountPath: /grafana-dashboard-definitions/0/persistentvolumesusage
          name: grafana-dashboard-persistentvolumesusage
        - mountPath: /grafana-dashboard-definitions/0/pod-total
          name: grafana-dashboard-pod-total
        - mountPath: /grafana-dashboard-definitions/0/prometheus-dashboard
          name: grafana-dashboard-prometheus-dashboard
        - mountPath: /grafana-dashboard-definitions/0/prometheus-remote-write
          name: grafana-dashboard-prometheus-remote-write
        - mountPath: /grafana-dashboard-definitions/0/prometheus
          name: grafana-dashboard-prometheus
        - mountPath: /grafana-dashboard-definitions/0/proxy
          name: grafana-dashboard-proxy
        - mountPath: /grafana-dashboard-definitions/0/scheduler
          name: grafana-dashboard-scheduler
        - mountPath: /grafana-dashboard-definitions/0/statefulset
          name: grafana-dashboard-statefulset
        - mountPath: /grafana-dashboard-definitions/0/traefik-dashboard
          name: grafana-dashboard-traefik-dashboard
        - mountPath: /grafana-dashboard-definitions/0/workload-total
          name: grafana-dashboard-workload-total
        - mountPath: /etc/grafana
          name: grafana-config
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: grafana-token-wwgws
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeName: k8s-worker01.fritz.box
      nodeSelector:
        beta.kubernetes.io/os: linux
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: grafana
      serviceAccountName: grafana
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          defaultMode: 420
          secretName: grafana-datasources
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-apiserver
        name: grafana-dashboard-apiserver
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-cluster-total
        name: grafana-dashboard-cluster-total
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-controller-manager
        name: grafana-dashboard-controller-manager
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-coredns-dashboard
        name: grafana-dashboard-coredns-dashboard
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-cluster
        name: grafana-dashboard-k8s-resources-cluster
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-namespace
        name: grafana-dashboard-k8s-resources-namespace
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-node
        name: grafana-dashboard-k8s-resources-node
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-pod
        name: grafana-dashboard-k8s-resources-pod
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-workload
        name: grafana-dashboard-k8s-resources-workload
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-k8s-resources-workloads-namespace
        name: grafana-dashboard-k8s-resources-workloads-namespace
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-kubelet
        name: grafana-dashboard-kubelet
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-kubernetes-cluster-dashboard
        name: grafana-dashboard-kubernetes-cluster-dashboard
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-namespace-by-pod
        name: grafana-dashboard-namespace-by-pod
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-namespace-by-workload
        name: grafana-dashboard-namespace-by-workload
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-node-cluster-rsrc-use
        name: grafana-dashboard-node-cluster-rsrc-use
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-node-rsrc-use
        name: grafana-dashboard-node-rsrc-use
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-nodes
        name: grafana-dashboard-nodes
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-persistentvolumesusage
        name: grafana-dashboard-persistentvolumesusage
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-pod-total
        name: grafana-dashboard-pod-total
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-prometheus-dashboard
        name: grafana-dashboard-prometheus-dashboard
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-prometheus-remote-write
        name: grafana-dashboard-prometheus-remote-write
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-prometheus
        name: grafana-dashboard-prometheus
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-proxy
        name: grafana-dashboard-proxy
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-scheduler
        name: grafana-dashboard-scheduler
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-statefulset
        name: grafana-dashboard-statefulset
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-traefik-dashboard
        name: grafana-dashboard-traefik-dashboard
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-workload-total
        name: grafana-dashboard-workload-total
      - name: grafana-config
        secret:
          defaultMode: 420
          secretName: grafana-config
      - name: grafana-token-wwgws
        secret:
          defaultMode: 420
          secretName: grafana-token-wwgws
    status:
      conditions:
      - lastProbeTime: null
        lastTransitionTime: '2021-02-11T12:06:01Z'
        status: 'True'
        type: Initialized
      - lastProbeTime: null
        lastTransitionTime: '2021-02-11T12:06:35Z'
        status: 'True'
        type: Ready
      - lastProbeTime: null
        lastTransitionTime: '2021-02-11T12:06:35Z'
        status: 'True'
        type: ContainersReady
      - lastProbeTime: null
        lastTransitionTime: '2021-02-11T12:06:01Z'
        status: 'True'
        type: PodScheduled
      containerStatuses:
      - containerID: docker://161ae6b33012e5bb2a19d20cdaf78831f0d3a90360fd17f462617cf7b71aac41
        image: grafana/grafana:7.0.3
        imageID: docker-pullable://grafana/grafana@sha256:d72946c8e5d57a9a121bcc3ae8e4a8ccab96960d81031d18a4c31ad1f7aea03e
        lastState: {}
        name: grafana
        ready: true
        restartCount: 0
        started: true
        state:
          running:
            startedAt: '2021-02-11T12:06:13Z'
      hostIP: 192.168.178.61
      phase: Running
      podIP: 10.244.2.51
      podIPs:
      - ip: 10.244.2.51
      qosClass: Burstable
      startTime: '2021-02-11T12:06:01Z'

PLAY RECAP ***********************************************************************************************************************************************************
localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

