# -*- mode: ruby -*-
# vi: set ft=ruby :

# Shell script in order to setup ansible nodes
$script = <<EOF
function CLONE_GITREPO(){
  if [ -d /home/vagrant/studies ]; then
    cd /home/vagrant/studies
    git pull origin master
  else
    git clone \
       https://github.com/erolneuhauss/studies.git \
       /home/vagrant/studies
  fi
}

function INSTALL_DESKTOP(){
  pgrep -l xfce
  if [ $? -ne 0 ]; then
    tasksel install xubuntu-desktop
  fi
}

function INSTALL_ANSIBLE(){
  ansible --version
  if [ $? -ne 0 ]; then
    if [ -r /etc/os-release ]; then
      . /etc/os-release
      if [ "$ID" = "ubuntu" ]; then
        echo ubuntu
        apt-get install software-properties-common
        apt-add-repository ppa:ansible/ansible
        apt-get update
        apt-get install -y git wget ansible
      elif [ "$ID" = "centos" ]; then
        echo centos
        yum install -y wget git vim
        rpm --import https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
        rpm -ihv https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        yum install -y ansible
      fi
    fi
  fi
}

function INSTALL_VIMBUNDLE(){
  if [ ! -f  /home/vagrant/.vim/autoload/pathogen.vim ]; then
    mkdir -p /home/vagrant/.vim/{autoload,bundle}
    curl -LSso /home/vagrant/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
    cd /home/vagrant/.vim/bundle
    git clone https://github.com/tpope/vim-fugitive
    git clone https://github.com/scrooloose/nerdtree
    git clone https://github.com/scrooloose/syntastic
    git clone https://github.com/ctrlpvim/ctrlp.vim
    git clone https://github.com/altercation/vim-colors-solarized
    git clone https://github.com/bling/vim-airline
    git clone https://github.com/vim-airline/vim-airline-themes
    git clone https://github.com/mhinz/vim-startify
    git clone --depth 1 https://github.com/ryanoasis/nerd-fonts
    git clone https://github.com/ryanoasis/vim-webdevicons
    cd nerd-fonts
    su vagrant ./install.sh DejaVuSansMono
    curl -LSso /home/vagrant/.vimrc https://raw.githubusercontent.com/erolneuhauss/studies/master/vim/vimrc
    chown vagrant:vagrant -R /home/vagrant
  fi
}

function CONFIG_ANSIBLE(){
  cp /home/vagrant/studies/ansible/ssh_config /home/vagrant/.ssh/config
  cp /home/vagrant/studies/ansible/gitconfig /home/vagrant/.gitconfig
  cp /home/vagrant/studies/ansible/terminalrc /home/vagrant/.config/xfce4/terminal/terminalrc
  cp /home/vagrant/studies/ansible/insecure_private_key /home/vagrant/.ssh/id_rsa
  chmod 0600 /home/vagrant/.ssh/id_rsa
  cp /home/vagrant/studies/ansible/provision/hosts /etc/ansible/hosts
  if [ ! "/home/vagrant/studies/ansible/provision/playbook.yml" ]; then
    for file in $(ls /home/vagrant/studies/ansible/provision/); do
      ln -s -r /home/vagrant/studies/ansible/provision/${file} /home/vagrant/${file}
    done
  fi
  chown vagrant:vagrant -R /home/vagrant
}

CLONE_GITREPO
INSTALL_DESKTOP
INSTALL_VIMBUNDLE
INSTALL_ANSIBLE
CONFIG_ANSIBLE
EOF

boxes = [
    {
        :name => "master",
        :box  => "ubuntu/trusty64",
        :ip   => "192.168.56.105",
    },
    {
        :name => "slave1",
        :box  => "centos/7",
        :ip   => "192.168.56.106",
    },
    {
        :name => "slave2",
        :box  => "centos/7",
        :ip   => "192.168.56.107",
    },
    {
        :name => "slave3",
        :box  => "centos/7",
        :ip   => "192.168.56.108",
    },
]

Vagrant.configure("2") do |config|
  config.ssh.insert_key   = false
  config.vm.network "private_network", type: "dhcp"
  config.vm.synced_folder '.', '/vagrant', :disabled => true

  config.vm.define "master" do |config|
    config.vm.box  = "ubuntu/trusty64"
    config.vm.hostname = "master"
    config.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.cpus = "2"
      vb.gui  = true
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
      vb.customize ["modifyvm", :id, "--vram", "64"]
    end # config.vm.provider
#    config.vm.provision "shell", inline: $script
  end # config.vm.master
  boxes.each do |box|
    config.vm.define box[:name] do |config|
      config.vm.box  = box[:box]
      config.vm.hostname = box[:name]
      config.vm.network "private_network", ip: box[:ip]
      config.vm.provision "shell", inline: $script
    end # config.vm
  end # boxes.each.loop
end # Vagrant
